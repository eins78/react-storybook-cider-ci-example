---
jobs:
  build and deploy:
    description: |
      # ✌︎ react-storybook continuous hosting demo

      > Builds [**react storybook**](http://getstorybook.io) and deploys it to a static file server using rsync.
      >
      > It keeps one version per tree-id (e.g. for stable links) and
      > makes aliases for branch names (e.g. for bookmarks).

    run_when:
      any branch matches:
        type: branch
        include_match: "^.+$"

    task_defaults:
      # configure these values for your trusted exector and the target server
      traits: { 'ssh_access_to_zhdk.kiste.li': yes }
      environment_variables:
        DEPLOY_HOSTNAME: "zhdk.kiste.li"
        DEPLOY_HOSTDIR: "/var/www/html/react-storybook-cider-ci-example2"
        LATEST_VERSION_BRANCH: "master"
        BUILD_OUTPUT_DIR: "storybook-static"

    tasks:
      build and deploy:
        scripts:
          'build':
            body: 'npm i -s && npm run -s build-storybook'
          'deploy':
            start_when:
              is built: { script_key: build, states: ['passed'] }
            body: |
              #!/bin/sh -exu
              HOSTNAME="$DEPLOY_HOSTNAME"
              HOSTDIR="$DEPLOY_HOSTDIR"
              LATEST_VERSION="$LATEST_VERSION_BRANCH"
              TREE_ID=$CIDER_CI_TREE_ID
              BUILD_DIR=$"BUILD_OUTPUT_DIR"
              TREE_SHORT="$(git log -n1 --format='%t')"
              BRANCHES="$(node -p 'JSON.parse(process.env.CIDER_CI_CURRENT_BRANCH_HEADS).join(" ")')"

              # copy:
              ssh -T $HOSTNAME "mkdir -p ${HOSTDIR}/tree ${HOSTDIR}/branch"
              rsync -avPh "${BUILD_DIR}/" "${HOSTNAME}:${HOSTDIR}/tree/${TREE_ID}/"

              # alias branch names, tree-id, latest version:
              ssh -T $HOSTNAME << EOF
                for B in ${BRANCHES}; do
                  ln -s -n -f ${HOSTDIR}/tree/${TREE_ID} "${HOSTDIR}/branch/\${B}"
                done
                ln -s -n -f ${HOSTDIR}/tree/${TREE_ID} ${HOSTDIR}/tree/${TREE_SHORT}
                ln -s -n -f "${HOSTDIR}/branch/${LATEST_VERSION}" ${HOSTDIR}/latest
              EOF

              echo "✌︎ deployed ${TREE_SHORT} to ${HOSTNAME}"
